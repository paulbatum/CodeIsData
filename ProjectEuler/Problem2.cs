using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using CodeIsData;

namespace ProjectEuler
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// Find the sum of all the even-valued terms in the sequence which do not exceed four million.
    /// </summary>
    public class Problem2 : IProblem
    {

        public IEnumerable<int> Fibonacci()
        {
            int x = 0;
            while (true)
                yield return Fibonacci(x++);
        }

        public int Fibonacci(int n)
        {
            if (n == 0) return 0;
            if (n == 1) return 1;

            return Fibonacci(n - 1) + Fibonacci(n - 2);
        }

        public ISolution Solve()
        {
            var solution = Core.Range._(1, 999)
                .Where(Core.IsMultipleOf._(3).Or(Core.IsMultipleOf._(5)))
                .Sum();



            return Solution.Create(solution);
        }
    }
}